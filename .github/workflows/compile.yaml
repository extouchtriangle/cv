name: Compile CV for GitHub Pages (Cached)

on:
  push:
    branches:
      - main # Trigger on push to your main branch

jobs:
  build_and_deploy_cv:
    runs-on: ubuntu-latest
    permissions:
      contents: write # This permission is crucial for pushing to the gh-pages branch!

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache TeX Live installation
        id: cache-texlive # Give this step an ID so we can reference its output
        uses: actions/cache@v4
        with:
          path: /usr/share/texlive # ONLY cache the main TeX Live installation directory
          key: ${{ runner.os }}-texlive-2025-v1 # IMPORTANT: Update this key (e.g., v2, v3) if you change the packages installed below!
          restore-keys: |
            ${{ runner.os }}-texlive-2025- # Fallback key for minor changes

      - name: Install TeX Live packages (if not cached)
        if: steps.cache-texlive.outputs.cache-hit != 'true'
        run: |
          echo "TeX Live cache miss, installing packages..."
          sudo apt-get update
          sudo apt-get install -y texlive-latex-base texlive-latex-recommended texlive-latex-extra texlive-fonts-recommended texlive-luatex texlive-extra-utils texlive-fonts-extra latexmk

      - name: Add TeX Live binaries to PATH
        run: |
          # This command adds the specified directory to the PATH for all subsequent steps in this job
          echo "/usr/share/texlive/texmf-dist/bin/x86_64-linux" >> $GITHUB_PATH
        # The $GITHUB_PATH environment variable is a special file that GitHub Actions reads
        # to update the PATH for the current job.

      - name: Verify lualatex executable (Diagnostic)
        run: |
          echo "Checking PATH:"
          echo $PATH
          which lualatex # This should now find lualatex
          lualatex --version # This should now work!

      - name: Compile LaTeX document with latexmk
        run: |
          mkdir -p web # Ensure the web directory exists
          cd web/
          latexmk -lualatex ../cv.tex
        # The output cv.pdf will now be in the 'web/' directory

      - name: Prepare PDF for deployment
        run: |
          mkdir deploy_cv # Create a new temporary directory for deployment
          cp web/cv.pdf deploy_cv/cv.pdf # Copy the compiled PDF into the new directory

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        if: github.ref == 'refs/heads/main'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./deploy_cv
          publish_branch: gh-pages
          # cname: yourdomain.com # Uncomment and set if you use a custom domain
